package CODIGOS;

import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JTextPane;

/**
 *
 * @author hugoocampo
 */
public class CrecimientoPoblacional extends javax.swing.JFrame {

    double t1, t2, p1, p2, c, k;
    String vC = "";
    String vK = "";
    String funcion = "";
    int nDecimales = 2;
    boolean estado1 = false;
    boolean estado2 = false;
    boolean estado3 = false;

    public CrecimientoPoblacional() {
        initComponents();
        establecerTamVentanP();
        jLbNumDec.setText("" + jSlrDecimales.getValue());
        modificarDecimales();
        agregarPlaceholder(jTxtTiempo1, "Ingresa el tiempo");
        agregarPlaceholder(jTxtPob1, "Ingresa la poblaci贸n");
        agregarPlaceholder(jTxtTiempo2, "Ingresa el tiempo");
        agregarPlaceholder(jTxtPob2, "Ingresa la poblaci贸n");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jPanelObservacion1 = new javax.swing.JPanel();
        jTxtTiempo1 = new javax.swing.JTextField();
        jTxtPob1 = new javax.swing.JTextField();
        jLbObservacion1 = new javax.swing.JLabel();
        jPanelObservacion2 = new javax.swing.JPanel();
        jTxtTiempo2 = new javax.swing.JTextField();
        jTxtPob2 = new javax.swing.JTextField();
        jLbObservacion2 = new javax.swing.JLabel();
        jBtnCalcularFuncion = new javax.swing.JButton();
        jLbTitulo = new javax.swing.JLabel();
        jLbFuncion = new javax.swing.JLabel();
        jBtnLimpiar = new javax.swing.JButton();
        jCbxTiempo = new javax.swing.JComboBox<>();
        jLbEUTiempo = new javax.swing.JLabel();
        jPanelPoblacion = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTxtT3 = new javax.swing.JTextField();
        jLbTiempo1 = new javax.swing.JLabel();
        jBtnCalcularP3 = new javax.swing.JButton();
        jLbPob3 = new javax.swing.JLabel();
        jPanelTiempo = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTxtP3 = new javax.swing.JTextField();
        jBtnT3 = new javax.swing.JButton();
        jLbT3 = new javax.swing.JLabel();
        jSlrDecimales = new javax.swing.JSlider();
        jLbDecimal = new javax.swing.JLabel();
        jLbNumDec = new javax.swing.JLabel();
        jBtnVerProcedimientos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxPaneFuncion = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTxPanePoblacion = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTxPaneTiempo = new javax.swing.JTextPane();
        jPanelTiempo1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelPrincipal.setBackground(new java.awt.Color(0, 51, 102));
        jPanelPrincipal.setLayout(null);

        jPanelObservacion1.setBackground(new java.awt.Color(0, 153, 255));

        jLbObservacion1.setBackground(new java.awt.Color(255, 255, 255));
        jLbObservacion1.setText("Observacion 1");

        javax.swing.GroupLayout jPanelObservacion1Layout = new javax.swing.GroupLayout(jPanelObservacion1);
        jPanelObservacion1.setLayout(jPanelObservacion1Layout);
        jPanelObservacion1Layout.setHorizontalGroup(
            jPanelObservacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservacion1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelObservacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelObservacion1Layout.createSequentialGroup()
                        .addComponent(jLbObservacion1)
                        .addContainerGap(459, Short.MAX_VALUE))
                    .addGroup(jPanelObservacion1Layout.createSequentialGroup()
                        .addComponent(jTxtTiempo1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtPob1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108))))
        );
        jPanelObservacion1Layout.setVerticalGroup(
            jPanelObservacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservacion1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLbObservacion1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelObservacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtTiempo1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtPob1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelObservacion1);
        jPanelObservacion1.setBounds(11, 99, 550, 74);

        jPanelObservacion2.setBackground(new java.awt.Color(0, 153, 255));

        jLbObservacion2.setBackground(new java.awt.Color(255, 255, 255));
        jLbObservacion2.setText("Obervaci贸n 2");

        javax.swing.GroupLayout jPanelObservacion2Layout = new javax.swing.GroupLayout(jPanelObservacion2);
        jPanelObservacion2.setLayout(jPanelObservacion2Layout);
        jPanelObservacion2Layout.setHorizontalGroup(
            jPanelObservacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservacion2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelObservacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelObservacion2Layout.createSequentialGroup()
                        .addComponent(jLbObservacion2)
                        .addContainerGap(466, Short.MAX_VALUE))
                    .addGroup(jPanelObservacion2Layout.createSequentialGroup()
                        .addComponent(jTxtTiempo2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTxtPob2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))))
        );
        jPanelObservacion2Layout.setVerticalGroup(
            jPanelObservacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservacion2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLbObservacion2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelObservacion2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtTiempo2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtPob2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelObservacion2);
        jPanelObservacion2.setBounds(11, 185, 550, 80);

        jBtnCalcularFuncion.setText("Generar funci贸n");
        jBtnCalcularFuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCalcularFuncionActionPerformed(evt);
            }
        });
        jPanelPrincipal.add(jBtnCalcularFuncion);
        jBtnCalcularFuncion.setBounds(217, 295, 122, 23);

        jLbTitulo.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLbTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jLbTitulo.setText("Crecimiento poblacional");
        jPanelPrincipal.add(jLbTitulo);
        jLbTitulo.setBounds(149, 10, 281, 30);

        jLbFuncion.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLbFuncion.setForeground(new java.awt.Color(255, 255, 255));
        jLbFuncion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbFuncion.setText("P(t) = ");
        jPanelPrincipal.add(jLbFuncion);
        jLbFuncion.setBounds(14, 348, 400, 28);

        jBtnLimpiar.setText("Reiniciar");
        jBtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarActionPerformed(evt);
            }
        });
        jPanelPrincipal.add(jBtnLimpiar);
        jBtnLimpiar.setBounds(470, 650, 90, 23);

        jCbxTiempo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "segundos", "minutos", "horas", "d铆as", "meses", "a帽os" }));
        jCbxTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxTiempoActionPerformed(evt);
            }
        });
        jPanelPrincipal.add(jCbxTiempo);
        jCbxTiempo.setBounds(149, 58, 103, 23);

        jLbEUTiempo.setBackground(new java.awt.Color(255, 255, 255));
        jLbEUTiempo.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLbEUTiempo.setForeground(new java.awt.Color(255, 255, 255));
        jLbEUTiempo.setText("Unidad de tiempo:");
        jPanelPrincipal.add(jLbEUTiempo);
        jLbEUTiempo.setBounds(6, 60, 125, 18);

        jPanelPoblacion.setBackground(new java.awt.Color(0, 204, 204));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("En ");

        jLbTiempo1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLbTiempo1.setForeground(new java.awt.Color(255, 255, 255));
        jLbTiempo1.setText("---");

        jBtnCalcularP3.setText("habr谩 una poblaci贸n de");
        jBtnCalcularP3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCalcularP3ActionPerformed(evt);
            }
        });

        jLbPob3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLbPob3.setForeground(new java.awt.Color(255, 255, 255));
        jLbPob3.setText("---");

        javax.swing.GroupLayout jPanelPoblacionLayout = new javax.swing.GroupLayout(jPanelPoblacion);
        jPanelPoblacion.setLayout(jPanelPoblacionLayout);
        jPanelPoblacionLayout.setHorizontalGroup(
            jPanelPoblacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPoblacionLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelPoblacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPoblacionLayout.createSequentialGroup()
                        .addComponent(jBtnCalcularP3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLbPob3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPoblacionLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jTxtT3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLbTiempo1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanelPoblacionLayout.setVerticalGroup(
            jPanelPoblacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPoblacionLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelPoblacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTxtT3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLbTiempo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPoblacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnCalcularP3)
                    .addComponent(jLbPob3))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanelPrincipal.add(jPanelPoblacion);
        jPanelPoblacion.setBounds(20, 430, 544, 103);

        jPanelTiempo.setBackground(new java.awt.Color(0, 204, 204));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Para una poblaci贸n de ");

        jBtnT3.setText("deberan transcurrir");
        jBtnT3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnT3ActionPerformed(evt);
            }
        });

        jLbT3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLbT3.setForeground(new java.awt.Color(255, 255, 255));
        jLbT3.setText("---");

        javax.swing.GroupLayout jPanelTiempoLayout = new javax.swing.GroupLayout(jPanelTiempo);
        jPanelTiempo.setLayout(jPanelTiempoLayout);
        jPanelTiempoLayout.setHorizontalGroup(
            jPanelTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTiempoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTiempoLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtP3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTiempoLayout.createSequentialGroup()
                        .addComponent(jBtnT3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLbT3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(524, 524, 524))
        );
        jPanelTiempoLayout.setVerticalGroup(
            jPanelTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTiempoLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanelTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTxtP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnT3)
                    .addComponent(jLbT3))
                .addGap(18, 18, 18))
        );

        jPanelPrincipal.add(jPanelTiempo);
        jPanelTiempo.setBounds(20, 540, 544, 100);

        jSlrDecimales.setMaximum(10);
        jSlrDecimales.setMinimum(1);
        jSlrDecimales.setValue(2);
        jPanelPrincipal.add(jSlrDecimales);
        jSlrDecimales.setBounds(379, 60, 128, 20);

        jLbDecimal.setForeground(new java.awt.Color(255, 255, 255));
        jLbDecimal.setText("Decimales:");
        jPanelPrincipal.add(jLbDecimal);
        jLbDecimal.setBounds(308, 61, 65, 17);

        jLbNumDec.setForeground(new java.awt.Color(255, 255, 255));
        jLbNumDec.setText("#");
        jPanelPrincipal.add(jLbNumDec);
        jLbNumDec.setBounds(519, 61, 25, 17);

        jBtnVerProcedimientos.setText("Ocultar procedimientos");
        jBtnVerProcedimientos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVerProcedimientosActionPerformed(evt);
            }
        });
        jPanelPrincipal.add(jBtnVerProcedimientos);
        jBtnVerProcedimientos.setBounds(392, 391, 166, 30);

        jScrollPane1.setViewportView(jTxPaneFuncion);

        jPanelPrincipal.add(jScrollPane1);
        jScrollPane1.setBounds(600, 40, 410, 790);

        jScrollPane2.setViewportView(jTxPanePoblacion);

        jPanelPrincipal.add(jScrollPane2);
        jScrollPane2.setBounds(1030, 40, 450, 390);

        jScrollPane3.setViewportView(jTxPaneTiempo);

        jPanelPrincipal.add(jScrollPane3);
        jScrollPane3.setBounds(1030, 460, 450, 370);

        jPanelTiempo1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Imprimir");

        jCheckBox1.setText("Calculo de funci贸n");

        jCheckBox2.setText("Calculo de poblaci贸n");

        jCheckBox3.setText("Calculo de tiempo");

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTiempo1Layout = new javax.swing.GroupLayout(jPanelTiempo1);
        jPanelTiempo1.setLayout(jPanelTiempo1Layout);
        jPanelTiempo1Layout.setHorizontalGroup(
            jPanelTiempo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTiempo1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(37, 37, 37)
                .addGroup(jPanelTiempo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1))
                .addGap(77, 77, 77)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanelTiempo1Layout.setVerticalGroup(
            jPanelTiempo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTiempo1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTiempo1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanelTiempo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelTiempo1Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox3)))
                .addGap(14, 14, 14))
        );

        jPanelPrincipal.add(jPanelTiempo1);
        jPanelTiempo1.setBounds(20, 700, 544, 110);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void modificarDecimales() {
        jSlrDecimales.addChangeListener(e -> {
            if (!jSlrDecimales.getValueIsAdjusting()) {
                // actualiza solo cuando el usuario suelta el slider
                nDecimales = jSlrDecimales.getValue();
                jLbNumDec.setText("" + nDecimales);
                if (estado1) {
                    try {
                        calcularFuncion();
                    } catch (BadLocationException ex) {
                        Logger.getLogger(CrecimientoPoblacional.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (estado2) {
                    try {
                        calcularPoblacion();
                    } catch (BadLocationException ex) {
                        Logger.getLogger(CrecimientoPoblacional.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if (estado3) {
                    try {
                        calcularTiempo();
                    } catch (BadLocationException ex) {
                        Logger.getLogger(CrecimientoPoblacional.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });

        jSlrDecimales.addChangeListener(e -> {

        });

    }

    public static void agregarLaTeX(JTextPane textPane, String latex) throws BadLocationException {
        // Crear f贸rmula y renderizar el 铆cono
        TeXFormula formula = new TeXFormula(latex);
        TeXIcon icon = formula.createTeXIcon(TeXFormula.SERIF, 18);

        // Crear una imagen con fondo transparente
        BufferedImage image = new BufferedImage(
                icon.getIconWidth(),
                icon.getIconHeight(),
                BufferedImage.TYPE_INT_ARGB
        );
        icon.paintIcon(null, image.getGraphics(), 0, 0);

        // Convertir la imagen a un ImageIcon
        ImageIcon latexIcon = new ImageIcon(image);

        // Obtener o crear el estilo
        StyledDocument doc = textPane.getStyledDocument();
        Style style = textPane.getStyle("LaTeXStyle");
        if (style == null) {
            style = textPane.addStyle("LaTeXStyle", null);
        }
        StyleConstants.setIcon(style, latexIcon);

        // Insertar imagen y salto de l铆nea
        doc.insertString(doc.getLength(), " ", style);
        doc.insertString(doc.getLength(), "\n\n", null);

        // Opcional: desplazarse autom谩ticamente al final
        textPane.setCaretPosition(doc.getLength());

        // Opcional: proteger edici贸n del usuario
        textPane.setEditable(false);
    }

    private void textoLatex(JLabel jLb, String latex) {
        TeXFormula formula = new TeXFormula(latex);

        // Crear el 铆cono con tama帽o (20 es un buen punto de partida)
        TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 22);
        //icon.setInsets(new Insets(5, 5, 2, 2)); // top, left, bottom, right

        // Asignar 铆cono al JLabel que agregaste desde el dise帽ador
        jLb.setIcon(icon);

        // Eliminar texto si ten铆a algo
        jLb.setText(null);
        //Alinear la imagen
        jLb.setHorizontalAlignment(SwingConstants.CENTER);
        jLb.setVerticalAlignment(SwingConstants.CENTER);

    }

    public String truncar(double num) {
        BigDecimal bdC = BigDecimal.valueOf(num).setScale(nDecimales, RoundingMode.DOWN);
        return limpiarDecimal(bdC);

    }

    public void calcularFuncion() throws BadLocationException {
        try {
            limpiarTextPane(jTxPaneFuncion);
            StringBuilder sb = new StringBuilder();
            int numPasos = 20;
            String paso[] = new String[numPasos];
            String tiempo1 = jTxtTiempo1.getText();
            String poblacion1 = jTxtPob1.getText();
            String tiempo2 = jTxtTiempo2.getText();
            String poblacion2 = jTxtPob2.getText();

            paso[0] = String.format("t_1=%s \\quad P_1=%s \\quad\\Rightarrow \\quad P(%s)=%s", tiempo1, poblacion1, tiempo1, poblacion1);
            paso[1] = String.format("t_2=%s \\quad P_2=%s \\quad\\Rightarrow \\quad P(%s)=%s", tiempo2, poblacion2, tiempo2, poblacion2);

            double t1 = Double.parseDouble(tiempo1);
            double p1 = Double.parseDouble(poblacion1);
            double t2 = Double.parseDouble(tiempo2);
            double p2 = Double.parseDouble(poblacion2);

            k = Double.parseDouble(truncar(Math.log(p2 / p1) / (t2 - t1)));
            c = Double.parseDouble(truncar(p1 / Math.pow(Math.E, t1 * k)));
            vC = truncar(c);
            vK = truncar(k);
            System.out.println("vC= " + vC);
            System.out.println("vK= " + vK);
            nDecimales = jSlrDecimales.getValue();

            String formulaInicial = String.format("P(t)=Ce^{kt}");
            paso[2] = formulaInicial;
            paso[3] = String.format("P(%s)=Ce^{k(%s)}", tiempo1, tiempo1);

            if (t1 == 0) {
                paso[4] = String.format("%s=Ce^{" + tiempo1 + "}", poblacion1);
                paso[5] = String.format("%s=C(1)", poblacion1);
                paso[6] = String.format("C=%s", truncar(p1 / Math.pow(Math.E, t1 * k)));
                paso[7] = String.format("P(t)= %s e^{kt}", (vC));
                paso[8] = String.format("P(%s)=" + (vC) + "e^{k(%s)}", tiempo2, tiempo2);
                paso[9] = String.format("%s=" + (vC) + "e^{%sk}", poblacion2, tiempo2);
                paso[10] = String.format("\\frac{%s}{" + poblacion1 + "}=e^{%sk}", poblacion2, tiempo2);
                paso[11] = String.format(truncar(p2 / p1) + "=e^{%sk}", tiempo2);
                paso[12] = String.format("\\ln{(" + truncar(p2 / p1) + ")}=\\ln{e^{%sk}}", tiempo2);
                paso[13] = String.format(truncar(Math.log(p2 / p1)) + "=%sk", truncar(t2 - t1));
                paso[14] = String.format("k=\\frac{" + truncar(Math.log(p2 / p1)) + "}{" + truncar(t2 - t1) + "}");
                paso[15] = String.format("k=" + truncar(Math.log(p2 / p1) / (t2 - t1)));
                paso[16] = String.format("\\textcolor{blue}{P(t) = %s e^{%st}}", (vC), (vK));
                numPasos = 17;
            } else {
                paso[4] = String.format("%s=Ce^{%sk}", poblacion1, tiempo1);
                paso[5] = String.format("\\frac{%s}{e^{%sk}}=C", poblacion1, tiempo1, tiempo2);
                paso[6] = String.format("C=%se^{-%sk}", poblacion1, tiempo1);
                paso[7] = String.format("P(t)= %s e^{-%sk} e^{kt}", poblacion1, tiempo1);
                paso[8] = String.format("P(%s)={%s}{e^{-%sk}}e^{k(%s)}", tiempo2, poblacion1, tiempo1, tiempo2);
                paso[9] = String.format("%s={%s}{e^{-%sk}}e^{%sk}", poblacion2, poblacion1, tiempo1, tiempo2);
                paso[10] = String.format("\\frac{%s}{" + poblacion1 + "}=e^{{" + truncar(t2 - t1) + "}k}", poblacion2);
                paso[11] = String.format(truncar(p2 / p1) + "=e^{{" + truncar(t2 - t1) + "}k}");
                paso[12] = String.format("\\ln{(" + truncar(p2 / p1) + ")}=\\ln{e^{{" + truncar(t2 - t1) + "}k}}");
                paso[13] = String.format(truncar(Math.log(p2 / p1)) + "=%sk", truncar(t2 - t1));
                paso[14] = String.format("k=\\frac{" + truncar(Math.log(p2 / p1)) + "}{" + truncar(t2 - t1) + "}");
                paso[15] = String.format("k=" + vK);
                paso[16] = String.format("C=%s{e^{-%s(%s)}}", poblacion1, tiempo1, vK);
                paso[17] = String.format("C=%s {(%s)}", poblacion1, truncar(Math.pow(Math.E, (-t1) * (k))));
                paso[18] = String.format("C=%s", vC);
                paso[19] = String.format("\\textcolor{blue}{P(t) = %s e^{%st}}", (vC), (vK));
                numPasos = 20;
            }
            for (int i = 0; i < numPasos; i++) {
                sb.append(paso[i]).append(" \\\\ ");
            }

            agregarLaTeX(jTxPaneFuncion, sb.toString());

            System.out.println("c: " + c);
            System.out.println("k: " + k);

            funcion = String.format("P(t) = %s \\cdot e^{%st}", truncar(c), k);

            textoLatex(jLbFuncion, funcion);
            estado1 = true;

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingresa valores v谩lidos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private String limpiarDecimal(BigDecimal bd) {
        bd = bd.stripTrailingZeros();
        if (bd.scale() <= 0) {
            return bd.toBigInteger().toString(); // Mostrar como entero si es exacto
        }
        return bd.toPlainString(); // Mostrar truncado sin ceros de m谩s
    }

    public void limpiarTextPane(JTextPane textPane) {
        try {
            StyledDocument doc = textPane.getStyledDocument();
            doc.remove(0, doc.getLength());
            textPane.setText("");
        } catch (BadLocationException e) {
            e.printStackTrace(); // Opcional: para ver errores en consola
        }
    }

    public void limpiarLabel(JLabel label) {
        label.setText(null);   // Elimina el texto
        label.setIcon(null);   // Elimina el 铆cono (煤til si us谩s f贸rmulas LaTeX o im谩genes)
    }

    public void calcularPoblacion() throws BadLocationException {
        try {
            limpiarTextPane(jTxPanePoblacion);
            StringBuilder sb = new StringBuilder();
            int numPasos = 10;
            String paso[] = new String[numPasos];

            double p3, t3;
            String tiempo3 = jTxtT3.getText();
            t3 = Double.parseDouble(tiempo3);
            p3 = c * Math.pow(Math.E, k * t3);
            jLbPob3.setText("" + truncar(p3));
//            BigDecimal bdP3 = BigDecimal.valueOf(p3).setScale(nDecimales, RoundingMode.DOWN);
//            String fc = limpiarDecimal(bdP3);
            //String letrero1=String.format("Obteniendo\\quadla\\quadpoblaci贸n\\quadpara\\quadun\\quadtiempo\\quadde\\quad"+tiempo3+"\\quada帽os.");
            String letrero1 = String.format("\\blacktriangledown\\text{Obteniendo la poblaci贸n para un tiempo de %s a帽os.}", tiempo3);
            String letrero2 = String.format("P=? \\quad t=%s", tiempo3);
            String letrero3 = String.format("P(t) = %s e^{%st}", (vC), (vK));
            String paso1 = String.format("P(%s) = %s \\cdot e^{%s(%s)}", tiempo3, (vC), (vK), tiempo3);
            String paso2 = String.format("P(%s) = %s \\cdot e^{" + truncar(k * t3) + "}", tiempo3, (vC));
            String paso3 = String.format("P(%s) = %s (" + truncar(Math.pow(Math.E, k * t3)) + ")", tiempo3, (vC));
            String paso4 = String.format("\\textcolor{blue}{P(%s) = " + truncar(c * Math.pow(Math.E, k * t3)) + "}", tiempo3);

            sb.append(letrero1).append(" \\\\ ")
                    .append(letrero2).append(" \\\\ ")
                    .append(letrero3).append(" \\\\ ")
                    .append(paso1).append(" \\\\ ")
                    .append(paso2).append(" \\\\ ")
                    .append(paso3).append(" \\\\ ")
                    .append(paso4).append(" \\\\ ");
// Finalmente, agregamos al JTextPane como una sola imagen
            agregarLaTeX(jTxPanePoblacion, sb.toString());

            estado2 = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingresa valores validos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void calcularTiempo() throws BadLocationException {
        try {
            limpiarTextPane(jTxPaneTiempo);
            StringBuilder sb = new StringBuilder();
            double t3, p3;
            String poblacion3 = jTxtP3.getText();
            p3 = Double.parseDouble(poblacion3);
            t3 = Math.log(p3 / c) / k;
            jLbT3.setText(truncar(t3) + " " + jCbxTiempo.getSelectedItem().toString());
            String letrero1 = String.format("\\blacktriangledown\\text{Obteniendo el tiempo para una poblaci贸n de %s.}", poblacion3);
            String letrero2 = String.format("P=%s \\quad t=?", poblacion3);
            String letrero3 = String.format("P(t) = %s e^{%st}", (vC), (vK));
            String letrero4 = String.format("%s= %s\\cdot e^{" + (vK) + "t}", poblacion3, (vC));
            String letrero5 = String.format("\\frac{%s}{%s}=e^{" + (vK) + "t}", poblacion3, (vC));
            String letrero6 = String.format(truncar(p3 / c) + "=e^{" + (vK) + "t}");
            String letrero7 = String.format("\\ln{(" + truncar(p3 / c) + ")}=\\ln{(e^{" + (vK) + "t})}");
            String letrero8 = String.format(truncar(Math.log(p3 / c)) + "=" + (vK) + "t");
            String letrero9 = String.format("t=\\frac{" + truncar(Math.log(p3 / c)) + "}{%s}", (vK));
            String letrero10 = String.format("\\textcolor{blue}{t=" + truncar(Math.log(p3 / c) / k) + "}");
            // Armamos todo en un solo bloque LaTeX
            sb.append(letrero1).append(" \\\\ ")
                    .append(letrero2).append(" \\\\ ")
                    .append(letrero3).append(" \\\\ ")
                    .append(letrero4).append(" \\\\ ")
                    .append(letrero5).append(" \\\\ ")
                    .append(letrero6).append(" \\\\ ")
                    .append(letrero7).append(" \\\\ ")
                    .append(letrero8).append(" \\\\ ")
                    .append(letrero9).append(" \\\\ ")
                    .append(letrero10);
// Finalmente, agregamos al JTextPane como una sola imagen
            agregarLaTeX(jTxPaneTiempo, sb.toString());
            estado3 = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingresa valores validos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void agregarPlaceholder(JTextField campo, String placeholder) {
        campo.setText(placeholder);
        campo.setForeground(Color.GRAY);

        campo.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (campo.getText().equals(placeholder)) {
                    campo.setText("");
                    campo.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (campo.getText().isEmpty()) {
                    campo.setForeground(Color.GRAY);
                    campo.setText(placeholder);
                }
            }
        });
    }

    public void establecerTamVentanP() {
        if (jBtnVerProcedimientos.getText().equals("Ver procedimientos")) {
            this.setSize(1500, this.getHeight());
            this.setLocationRelativeTo(null);
            jBtnVerProcedimientos.setText("Ocultar procedimientos");
        } else {
            this.setSize(570, this.getHeight());
            this.setLocationRelativeTo(null);
            jBtnVerProcedimientos.setText("Ver procedimientos");
        }

        SwingUtilities.invokeLater(() -> {
            int x = (jPanelPrincipal.getWidth() - jLbTitulo.getWidth()) / 2;
            int y = jLbTitulo.getY();
            jLbTitulo.setLocation(x, y);
        });
    }

    private void jBtnCalcularFuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCalcularFuncionActionPerformed
        try {
            // TODO add your handling code here:
            calcularFuncion();
            if (estado2) {
                calcularPoblacion();
            }
            if (estado3) {
                calcularTiempo();
            }
        } catch (BadLocationException ex) {
            Logger.getLogger(CrecimientoPoblacional.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtnCalcularFuncionActionPerformed

    private void jBtnCalcularP3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCalcularP3ActionPerformed
        try {
            calcularPoblacion();
        } catch (BadLocationException ex) {
            Logger.getLogger(CrecimientoPoblacional.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtnCalcularP3ActionPerformed

    private void jBtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarActionPerformed
        // TODO add your handling code here:
        jTxtPob1.setText("");
        jTxtPob2.setText("");
        jTxtTiempo1.setText("");
        jTxtTiempo2.setText("");
        jLbFuncion.setText("P(t) = ");
        estado1 = false;
        estado2 = false;
        estado3 = false;
        limpiarTextPane(jTxPaneTiempo);
        limpiarLabel(jLbFuncion);
    }//GEN-LAST:event_jBtnLimpiarActionPerformed

    private void jBtnT3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnT3ActionPerformed
        try {
            // TODO add your handling code here:
            calcularTiempo();
        } catch (BadLocationException ex) {
            Logger.getLogger(CrecimientoPoblacional.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtnT3ActionPerformed

    private void jCbxTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxTiempoActionPerformed
        // TODO add your handling code here:
        jLbTiempo1.setText(jCbxTiempo.getSelectedItem().toString());

    }//GEN-LAST:event_jCbxTiempoActionPerformed

    private void jBtnVerProcedimientosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVerProcedimientosActionPerformed
        // TODO add your handling code here:

        establecerTamVentanP();

    }//GEN-LAST:event_jBtnVerProcedimientosActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        generarPDF();

    }//GEN-LAST:event_jButton2ActionPerformed

    public void generarPDF() {
        // Lista para almacenar los JTextPanes seleccionados
        List<JTextPane> panesSeleccionados = new ArrayList<>();
        // Lista para almacenar los t铆tulos de cada secci贸n
        List<String> titulos = new ArrayList<>();

        // Verificar qu茅 JCheckBox est谩n seleccionados y agregar los JTextPane correspondientes
        if (jCheckBox1.isSelected()) {
            panesSeleccionados.add(jTxPaneFuncion);
            titulos.add("Funci贸n");
        }
        if (jCheckBox2.isSelected()) {
            panesSeleccionados.add(jTxPanePoblacion);
            titulos.add("Poblaci贸n");
        }
        if (jCheckBox3.isSelected()) {
            panesSeleccionados.add(jTxPaneTiempo);
            titulos.add("Tiempo");
        }

        // Si no se selecciona ninguno, mostrar un mensaje de advertencia
        if (panesSeleccionados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Selecciona al menos un procedimiento para exportar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Crear el JFileChooser para seleccionar la ubicaci贸n y el nombre del archivo
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar PDF");
        fileChooser.setSelectedFile(new File("procedimientos.pdf"));

        // Mostrar el cuadro de di谩logo de guardar
        int seleccion = fileChooser.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            // Obtener el archivo seleccionado
            File archivo = fileChooser.getSelectedFile();

            try {
                // Llamar al m茅todo exportador para generar el PDF con los textos seleccionados
                ExportadorPDF.exportarProcedimientos(panesSeleccionados, titulos, archivo);
                JOptionPane.showMessageDialog(this, "PDF generado con 茅xito:\n" + archivo.getAbsolutePath());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al generar PDF:\n" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrecimientoPoblacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrecimientoPoblacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrecimientoPoblacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrecimientoPoblacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrecimientoPoblacional().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCalcularFuncion;
    private javax.swing.JButton jBtnCalcularP3;
    private javax.swing.JButton jBtnLimpiar;
    private javax.swing.JButton jBtnT3;
    private javax.swing.JButton jBtnVerProcedimientos;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCbxTiempo;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLbDecimal;
    private javax.swing.JLabel jLbEUTiempo;
    private javax.swing.JLabel jLbFuncion;
    private javax.swing.JLabel jLbNumDec;
    private javax.swing.JLabel jLbObservacion1;
    private javax.swing.JLabel jLbObservacion2;
    private javax.swing.JLabel jLbPob3;
    private javax.swing.JLabel jLbT3;
    private javax.swing.JLabel jLbTiempo1;
    private javax.swing.JLabel jLbTitulo;
    private javax.swing.JPanel jPanelObservacion1;
    private javax.swing.JPanel jPanelObservacion2;
    private javax.swing.JPanel jPanelPoblacion;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelTiempo;
    private javax.swing.JPanel jPanelTiempo1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSlider jSlrDecimales;
    private javax.swing.JTextPane jTxPaneFuncion;
    private javax.swing.JTextPane jTxPanePoblacion;
    private javax.swing.JTextPane jTxPaneTiempo;
    private javax.swing.JTextField jTxtP3;
    private javax.swing.JTextField jTxtPob1;
    private javax.swing.JTextField jTxtPob2;
    private javax.swing.JTextField jTxtT3;
    private javax.swing.JTextField jTxtTiempo1;
    private javax.swing.JTextField jTxtTiempo2;
    // End of variables declaration//GEN-END:variables
}
